---
layout: default
---
  <div class="post" style="text-align: left; max-width: 800px; margin: auto;">
    <header class="post-header">
      {% comment %} <h1 class="post-title">
        {% if site.title == 'blank' %}
          <div class="font-weight-bold" style="text-align: center;">{{ site.first_name }}</div> {{ site.middle_name }} {{ site.last_name }}
        {% else %}
          <div class="font-weight-bold" style="text-align: center;">{{ site.title }}</div>
        {% endif %}
      </h1> {% endcomment %}
      {% if site.image %}
        <div style="text-align: center;">
          <img src="{{ site.image }}" alt="Logo" style="max-width: 50%; height: auto;">
        </div>
      {% endif %}
      {% comment %} <p class="desc" style="text-align: center;">{{ page.subtitle }}</p> {% endcomment %}
    </header>
  </div>
  

  <article>
    {% if page.profile %}
      <div class="profile" style="text-align: left; width: 50%; margin: auto;">
        {% if page.profile.image %}
          {% assign profile_image_path = page.profile.image | prepend: 'assets/img/' %}
          {% if page.profile.image_circular %}
            {% assign profile_image_class = 'img-fluid z-depth-1 rounded-circle' %}
          {% else %}
            {% assign profile_image_class = 'img-fluid z-depth-1 rounded' %}
          {% endif %}
          {% capture sizes %}(min-width: {{site.max_width}}) {{site.max_width | minus: 30 | times: 0.3}}px, (min-width: 576px) 30vw, 95vw{% endcapture %}
          {%
            include figure.liquid loading="eager" path=profile_image_path class=profile_image_class sizes=sizes alt=page.profile.image cache_bust=true
          %}
        {% endif %}
        {% if page.profile.more_info %}
          <div class="more-info">{{ page.profile.more_info }}</div>
        {% endif %}
      </div><br>
    {% endif %}

    <!-- Clears any preceding floats and ensures text starts below the image -->
    <div style="clear: both;"></div>
    
    <!-- Dynamic content should follow here -->
    {{ content }}

    <!-- News -->
    {% if page.news and site.announcements.enabled %}
      <h2>
        <a href="{{ '/news/' | relative_url }}" style="color: inherit">news</a>
      </h2>
      {% include news.liquid limit=true %}
    {% endif %}

    <!-- Latest posts -->
    {% if site.latest_posts.enabled %}
      <h2>
        <a href="{{ '/blog/' | relative_url }}" style="color: inherit">latest posts</a>
      </h2>
      {% include latest_posts.liquid %}
    {% endif %}

    <!-- Selected papers -->
    {% if page.selected_papers %}
      <h2>
        <a href="{{ '/publications/' | relative_url }}" style="color: inherit">selected publications</a>
      </h2>
      {% include selected_papers.liquid %}
    {% endif %}

    <!-- Social -->
    {% if page.social %}
      <div class="social">
        <div class="contact-icons">{% include social.liquid %}</div>
        <div class="contact-note">{{ site.contact_note }}</div>
      </div>
    {% endif %}
  </article>

  <div class="kaur-lab-component">
    <style>
      .kaur-lab-component canvas {
          background: inherit;
          width: 100%; /* Updated width */
          /* height: ; Updated height for a square aspect */
          max-width: 800px;
          display: block; /* Centers the canvas in the div */
          margin: 0 auto; /* Centers the canvas horizontally */
      }
      .kaur-lab-component input {
        visibility: hidden; /* Hides the input field */
        pointer-events: none; /* Makes the input field non-interactable */
      }
      .kaur-lab-component p {
          position: fixed;
          left: 0;
          bottom: 5px;
          color: #fff;
          z-index: 10;
          font-size: 16px;
          font-family: Helvetica, Verdana, sans-serif;
          opacity: 0.5;
          width: 100%;
          text-align: center;
          margin: 0;
      }
    </style>
    <canvas id="kaurLabScene"></canvas>
    <input id="kaurLabCopy" type="text" value="Kaur Laboratory" />
    <p>Click anywhere to change the radius of your mouse</p>
    <script>
      var canvas = document.querySelector(".kaur-lab-component #kaurLabScene"),
          ctx = canvas.getContext("2d"),
          particles = [],
          amount = 0,
          mouse = {x: 0, y: 0},
          radius = 1;
  
      var colors = ["#468966", "#FFF0A5", "#FFB03B", "#B64926", "#8E2800"];
  
      var copy = document.querySelector(".kaur-lab-component #kaurLabCopy");

      // Set initial width and height based on canvas style
      var ww = canvas.width = canvas.offsetWidth;
      var wh = canvas.height = canvas.offsetHeight;
  
      function Particle(x, y) {
          this.x = Math.random() * ww;
          this.y = Math.random() * wh;
          this.dest = {
              x: x,
              y: y
          };
          this.r = Math.random() * 3 + 1;
          this.vx = (Math.random() - 0.5) * 20;
          this.vy = (Math.random() - 0.5) * 20;
          this.accX = 0;
          this.accY = 0;
          this.friction = Math.random() * 0.05 + 0.94;
          this.color = colors[Math.floor(Math.random() * 5)];
      }
  
      Particle.prototype.render = function () {
          this.accX = (this.dest.x - this.x) / 1000;
          this.accY = (this.dest.y - this.y) / 1000;
          this.vx += this.accX;
          this.vy += this.accY;
          this.vx *= this.friction;
          this.vy *= this.friction;
  
          this.x += this.vx;
          this.y += this.vy;
  
          ctx.fillStyle = this.color;
          ctx.beginPath();
          ctx.arc(this.x, this.y, this.r, Math.PI * 2, false);
          ctx.fill();
  
          var a = this.x - mouse.x;
          var b = this.y - mouse.y;
  
          var distance = Math.sqrt(a * a + b * b);
          if (distance < (radius * 70)) {
              this.accX = (this.x - mouse.x) / 100;
              this.accY = (this.y - mouse.y) / 100;
              this.vx += this.accX;
              this.vy += this.accY;
          }
      };
  
      function onMouseMove(e) {
          var rect = canvas.getBoundingClientRect();
          mouse.x = e.clientX - rect.left;
          mouse.y = e.clientY - rect.top;
      }
  
      function onTouchMove(e) {
          if (e.touches.length > 0) {
              mouse.x = e.touches[0].clientX;
              mouse.y = e.touches[0].clientY;
          }
      }
  
      function onTouchEnd(e) {
          mouse.x = -9999;
          mouse.y = -9999;
      }
  
      function initScene() {
          // Reinitialize dimensions on resize
          ww = canvas.width = canvas.offsetWidth;
          wh = canvas.height = canvas.offsetHeight;
  
          ctx.clearRect(0, 0, canvas.width, canvas.height);
  
          ctx.font = "bold " + (ww / 10) + "px sans-serif";
          ctx.textAlign = "center";
          ctx.fillText(copy.value, ww / 2, wh / 2);
  
          var data = ctx.getImageData(0, 0, ww, wh).data;
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          ctx.globalCompositeOperation = "screen";
  
          particles = [];
          for (var i = 0; i < ww; i += Math.round(ww / 150)) {
              for (var j = 0; j < wh; j += Math.round(ww / 150)) {
                  if (data[((i + j * ww) * 4) + 3] > 150) {
                      particles.push(new Particle(i, j));
                  }
              }
          }
          amount = particles.length;
      }
  
      function onMouseClick() {
          radius++;
          if (radius === 5) {
              radius = 0;
          }
      }
  
      function render(a) {
          requestAnimationFrame(render);
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          for (var i = 0; i < amount; i++) {
              particles[i].render();
          }
      };
  
      copy.addEventListener("keyup", initScene);
      window.addEventListener("resize", initScene);
      window.addEventListener("mousemove", onMouseMove);
      window.addEventListener("touchmove", onTouchMove);
      window.addEventListener("click", onMouseClick);
      window.addEventListener("touchend", onTouchEnd);
      initScene();
      requestAnimationFrame(render);
    </script>
  </div>

</div>
